{"ast":null,"code":"function check() {\n  var posts = document.querySelectorAll(\".post\");\n  posts.forEach(function (post) {\n    if (post.getAttribute(\"data-load\") !== null) {\n      return null;\n    }\n\n    ;\n    post.setAttribute(\"data-load\", \"true\");\n    post.addEventListener(\"click\", function () {\n      var postId = post.getAttribute(\"data-id\");\n      var XHR = new XMLHttpRequest();\n      XHR.open(\"GET\", \"/posts/\".concat(postId), true);\n      XHR.responseType = \"json\";\n      XHR.send();\n\n      XHR.onload = function () {\n        if (XHR.status !== 200) {\n          alert(\"Error \".concat(XHR.status, \": \").concat(XHR.statusText));\n          return null;\n        }\n\n        ;\n        var item = XHR.response.post;\n\n        if (item.checked === true) {\n          post.setAttribute(\"data-check\", \"true\");\n        } else if (item.checked === false) {\n          post.removeAttribute(\"data-check\");\n        }\n\n        ;\n      };\n    });\n  });\n}\n\n;\nsetInterval(check, 1000); // ---それぞれの役割について--------\n// function check() {\n//   // 表示されているすべてのメモを取得している\n//   const posts = document.querySelectorAll(\".post\");\n//   posts.forEach(function (post) {\n//      if (post.getAttribute(\"data-load\") != null) {\n//       return null;\n//     }\n//     post.setAttribute(\"data-load\", \"true\");\n//     // メモをクリックした場合に実行する処理を定義している\n//     post.addEventListener(\"click\", () => {\n//       // どのメモをクリックしたのか、カスタムデータを利用して取得している\n//       const postId = post.getAttribute(\"data-id\");\n//       // Ajaxに必要なオブジェクトを生成している\n//       const XHR = new XMLHttpRequest();\n//       // openでリクエストを初期化する\n//       XHR.open(\"GET\", `/posts/${postId}`, true);\n//       // レスポンスのタイプを指定する\n//       XHR.responseType = \"json\";\n//       // sendでリクエストを送信する\n//       XHR.send();\n//       // レスポンスを受け取った時の処理を記述する\n//       XHR.onload = () => {\n//         if (XHR.status != 200) {\n//           // レスポンスの HTTP ステータスを解析し、該当するエラーメッセージをアラートで表示するようにしている\n//           alert(`Error ${XHR.status}: ${XHR.statusText}`);\n//           // 処理を終了している\n//           return null;          \n//         }\n//         // レスポンスされたデータを変数itemに代入している\n//         const item = XHR.response.post;\n//         if (item.checked === true) {\n//           // 既読状態であれば、灰色に変わるcssを適用するためのカスタムデータを追加している\n//           post.setAttribute(\"data-check\", \"true\");\n//         } else if (item.checked === false) {\n//           // 未読状態であれば、カスタムデータを削除している\n//           post.removeAttribute(\"data-check\");\n//         }\n//       };\n//     });\n//   });\n// }\n// setInterval(check, 1000);","map":{"version":3,"sources":["/Users/matsuura/projects/ajax_app/app/javascript/checked.js"],"names":["check","posts","document","querySelectorAll","forEach","post","getAttribute","setAttribute","addEventListener","postId","XHR","XMLHttpRequest","open","responseType","send","onload","status","alert","statusText","item","response","checked","removeAttribute","setInterval"],"mappings":"AAAA,SAASA,KAAT,GAAiB;AACf,MAAMC,KAAK,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAd;AACAF,EAAAA,KAAK,CAACG,OAAN,CAAe,UAASC,IAAT,EAAe;AAC5B,QAAIA,IAAI,CAACC,YAAL,CAAkB,WAAlB,MAAmC,IAAvC,EAA6C;AAC3C,aAAO,IAAP;AACD;;AAAA;AACDD,IAAAA,IAAI,CAACE,YAAL,CAAkB,WAAlB,EAA+B,MAA/B;AACAF,IAAAA,IAAI,CAACG,gBAAL,CAAsB,OAAtB,EAA+B,YAAM;AACnC,UAAMC,MAAM,GAAGJ,IAAI,CAACC,YAAL,CAAkB,SAAlB,CAAf;AACA,UAAMI,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,mBAA0BH,MAA1B,GAAoC,IAApC;AACAC,MAAAA,GAAG,CAACG,YAAJ,GAAmB,MAAnB;AACAH,MAAAA,GAAG,CAACI,IAAJ;;AACAJ,MAAAA,GAAG,CAACK,MAAJ,GAAa,YAAI;AACf,YAAIL,GAAG,CAACM,MAAJ,KAAe,GAAnB,EAAuB;AACrBC,UAAAA,KAAK,iBAAUP,GAAG,CAACM,MAAd,eAAyBN,GAAG,CAACQ,UAA7B,EAAL;AACA,iBAAO,IAAP;AACD;;AAAA;AACD,YAAMC,IAAI,GAAGT,GAAG,CAACU,QAAJ,CAAaf,IAA1B;;AACA,YAAIc,IAAI,CAACE,OAAL,KAAiB,IAArB,EAA2B;AACzBhB,UAAAA,IAAI,CAACE,YAAL,CAAkB,YAAlB,EAAgC,MAAhC;AACD,SAFD,MAEM,IAAIY,IAAI,CAACE,OAAL,KAAiB,KAArB,EAA2B;AAC/BhB,UAAAA,IAAI,CAACiB,eAAL,CAAqB,YAArB;AACD;;AAAA;AACA,OAXH;AAYD,KAlBD;AAmBD,GAxBD;AAyBD;;AAAA;AACDC,WAAW,CAACvB,KAAD,EAAQ,IAAR,CAAX,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["function check() {\n  const posts = document.querySelectorAll(\".post\");\n  posts.forEach( function(post) {\n    if (post.getAttribute(\"data-load\") !== null) {\n      return null;\n    };\n    post.setAttribute(\"data-load\", \"true\");\n    post.addEventListener(\"click\", () => {\n      const postId = post.getAttribute(\"data-id\");\n      const XHR = new XMLHttpRequest();\n      XHR.open(\"GET\", `/posts/${postId}`, true);\n      XHR.responseType = \"json\"; \n      XHR.send();\n      XHR.onload = ()=>{\n        if (XHR.status !== 200){\n          alert(`Error ${XHR.status}: ${XHR.statusText}`);\n          return null;\n        };\n        const item = XHR.response.post;\n        if (item.checked === true) {\n          post.setAttribute(\"data-check\", \"true\");\n        }else if (item.checked === false){\n          post.removeAttribute(\"data-check\");\n        };\n        };\n    });\n  });\n};\nsetInterval(check, 1000)\n\n\n// ---それぞれの役割について--------\n\n// function check() {\n//   // 表示されているすべてのメモを取得している\n//   const posts = document.querySelectorAll(\".post\");\n//   posts.forEach(function (post) {\n//      if (post.getAttribute(\"data-load\") != null) {\n//       return null;\n//     }\n//     post.setAttribute(\"data-load\", \"true\");\n\n//     // メモをクリックした場合に実行する処理を定義している\n//     post.addEventListener(\"click\", () => {\n\n//       // どのメモをクリックしたのか、カスタムデータを利用して取得している\n//       const postId = post.getAttribute(\"data-id\");\n\n//       // Ajaxに必要なオブジェクトを生成している\n//       const XHR = new XMLHttpRequest();\n\n//       // openでリクエストを初期化する\n//       XHR.open(\"GET\", `/posts/${postId}`, true);\n\n//       // レスポンスのタイプを指定する\n//       XHR.responseType = \"json\";\n\n//       // sendでリクエストを送信する\n//       XHR.send();\n\n//       // レスポンスを受け取った時の処理を記述する\n//       XHR.onload = () => {\n//         if (XHR.status != 200) {\n//           // レスポンスの HTTP ステータスを解析し、該当するエラーメッセージをアラートで表示するようにしている\n//           alert(`Error ${XHR.status}: ${XHR.statusText}`);\n//           // 処理を終了している\n//           return null;          \n//         }\n//         // レスポンスされたデータを変数itemに代入している\n//         const item = XHR.response.post;\n//         if (item.checked === true) {\n//           // 既読状態であれば、灰色に変わるcssを適用するためのカスタムデータを追加している\n//           post.setAttribute(\"data-check\", \"true\");\n//         } else if (item.checked === false) {\n//           // 未読状態であれば、カスタムデータを削除している\n//           post.removeAttribute(\"data-check\");\n//         }\n//       };\n//     });\n//   });\n// }\n// setInterval(check, 1000);"]},"metadata":{},"sourceType":"module"}